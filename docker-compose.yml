services:
  api:
    build: .
    container_name: shopsmart-api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3001:3000"
      - "9229:9229" # Debug port
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/shopsmart?schema=public"
      REDIS_URL: "redis://redis:6379"
      NODE_ENV: "production"
    restart: unless-stopped
    networks:
      - shopsmart-network

  api-dev:
    build: .
    container_name: shopsmart-api-dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
      - "9229:9229" # Debug port
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/shopsmart?schema=public"
      REDIS_URL: "redis://redis:6379"
      NODE_ENV: "development"
    volumes:
      - ./src:/usr/src/app/src
      - ./prisma:/usr/src/app/prisma
    command: pnpm run dev
    networks:
      - shopsmart-network

  api-test:
    build: .
    container_name: shopsmart-api-test
    depends_on:
      postgres-test:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres-test:5432/shopsmart-test?schema=public"
      REDIS_URL: "redis://redis:6379"
      NODE_ENV: "test"
      TEST_DB_RESET: "true"
      JWT_SECRET: "test-secret-123"
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./test:/usr/src/app/test
      - ./src:/usr/src/app/src
      - ./prisma:/usr/src/app/prisma
      - ./vitest.config.ts:/usr/src/app/vitest.config.ts
      - ./.env.test:/usr/src/app/.env.test
    command: sh -c "pnpm exec prisma db push --force-reset && pnpm exec vitest run --config vitest.config.ts --reporter=verbose --no-watch"
    networks:
      - shopsmart-network

  postgres:
    image: postgres:15
    container_name: shopsmart-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shopsmart
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - shopsmart-network

  postgres-test:
    image: postgres:15
    container_name: shopsmart-postgres-test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shopsmart-test
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - shopsmart-network

  redis:
    image: redis:7
    container_name: shopsmart-redis
    command: redis-server --bind 0.0.0.0
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 3s
      retries: 10
      start_period: 5s
    networks:
      - shopsmart-network

volumes:
  postgres_data:
  postgres_test_data:

networks:
  shopsmart-network:
    driver: bridge
